{"version":3,"sources":["webpack:///./src/app/order/delivery-costs/delivery-costs.component.html","webpack:///./src/app/order/delivery-costs/delivery-costs.component.ts","webpack:///./src/app/order/order-items/order-items.component.html","webpack:///./src/app/order/order-items/order-items.component.ts","webpack:///./src/app/order/order.component.html","webpack:///./src/app/order/order.component.ts","webpack:///./src/app/order/order.model.ts","webpack:///./src/app/order/order.module.ts"],"names":[],"mappings":"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","file":"order-order-module.js","sourcesContent":["module.exports = \"<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table\\\">\\n    <tbody><tr>\\n      <th style=\\\"width:50%\\\">Itens:</th>\\n      <td class=\\\"text-right\\\">{{itemsValue | currency: 'BRL': 'symbol'}}</td>\\n    </tr>\\n    <tr>\\n      <th>Frete:</th>\\n      <td class=\\\"text-right\\\">{{delivery | currency: 'BRL': 'symbol'}}</td>\\n    </tr>\\n    <tr>\\n      <th>Total:</th>\\n      <td class=\\\"text-right\\\">{{total()| currency: 'BRL': 'symbol'}}</td>\\n    </tr>\\n  </tbody></table>\\n</div>\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mt-delivery-costs',\n  templateUrl: './delivery-costs.component.html',\n})\nexport class DeliveryCostsComponent implements OnInit {\n\n  @Input() delivery: number\n  @Input() itemsValue: number\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  total(): number{\n    return this.delivery + this.itemsValue\n  }\n\n}\n","module.exports = \"<div class=\\\"col-xs-12\\\" *ngIf=\\\"items.length === 0\\\">\\n  <p>\\n    Não há itens no seu carrinho. Que tal começar por <a [routerLink]=\\\"['/restaurants']\\\">aqui</a>\\n  </p>\\n\\n</div>\\n\\n<div class=\\\"col-xs-12 table-responsive\\\">\\n\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n    <tr>\\n      <th class=\\\"text-center\\\">Quantidade</th>\\n      <th>Item</th>\\n      <th>Descrição</th>\\n      <th class=\\\"text-right\\\">Subtotal</th>\\n      <th class=\\\"text-right\\\"></th>\\n    </tr>\\n    </thead>\\n\\n    <tbody>\\n    <tr *ngFor=\\\"let item of items\\\">\\n      <td class=\\\"text-center\\\">\\n        <a  (click)=\\\"emitDecreaseQty(item)\\\" class=\\\"btn btn-sm\\\"><i class=\\\"fa fa-minus\\\"></i></a>\\n        {{item.quantity}}\\n        <a (click)=\\\"emitIncreaseQty(item)\\\" class=\\\"btn btn-sm\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n      </td>\\n      <td>{{item.menuItem.name}}</td>\\n\\n      <td>{{item.menuItem.description}}</td>\\n      <td class=\\\"text-right\\\">{{item.value() | currency: 'BRL': 'symbol'}}</td>\\n      <td class=\\\"text-right\\\">\\n        <a (click)=\\\"emitRemove(item)\\\" class=\\\"btn btn-sm danger\\\"><i class=\\\"fa fa-remove\\\"></i></a>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CartItem } from 'app/restaurant-detail/shooping-cart/cart-item.model';\nimport { OrderComponent } from '../order.component';\n@Component({\n  selector: 'mt-order-items',\n  templateUrl: './order-items.component.html',\n})\nexport class OrderItemsComponent implements OnInit {\n\n  @Input() items: CartItem[]\n\n  @Output() increaseQty = new EventEmitter<CartItem>()\n  @Output() decreaseQty = new EventEmitter<CartItem>()\n  @Output() remove = new EventEmitter<CartItem>()\n\n  constructor() { }\n\n  \n  ngOnInit() {\n  }\n\n  emitIncreaseQty(item:CartItem){\n    this.increaseQty.emit(item)\n  }\n  emitDecreaseQty(item:CartItem){\n    this.decreaseQty.emit(item)\n  }\n  emitRemove(item:CartItem){\n    this.remove.emit(item)\n  }\n}\n","module.exports = \"<section class=\\\"content-header\\\">\\n</section>\\n<section class=\\\"content\\\">\\n  <section class=\\\"invoice\\\"> \\n        <form [formGroup]=\\\"orderForm\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <h2 class=\\\"page-header\\\">\\n                <i class=\\\"fa fa-shopping-cart\\\"></i> Finalize o seu pedido\\n              </h2>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            \\n            <div class=\\\"col-xs-12\\\">\\n              <p class=\\\"lead\\\">Seus Dados:</p>\\n              <span class=\\\"help-block pull-right has-error-block\\\" *ngIf=\\\"orderForm.hasError('emailsNotMatch')\\\"><i class=\\\"fa fa-remove\\\"></i> Email não confere</span>\\n            </div>\\n\\n\\n            <div class=\\\"col-sm-6 col-xs-12\\\">\\n              <mt-input-container errorMessage=\\\"Campo obrigatório e com 5 caracteres\\\" label=\\\"Nome\\\">\\n                <input class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"nome\\\" minlength=\\\"5\\\" autocomplete=\\\"off\\\">\\n              </mt-input-container>\\n            </div>\\n\\n            <div class=\\\"col-sm-3 col-xs-6\\\">\\n              <mt-input-container errorMessage=\\\"Email Invalido\\\" label=\\\"E-mail\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\"  placeholder=\\\"E-mail\\\" autocomplete=\\\"off\\\">\\n              </mt-input-container>\\n            </div>\\n\\n            <div class=\\\"col-sm-3 col-xs-6\\\">\\n              <mt-input-container errorMessage=\\\"E-mail inválido\\\" label=\\\"E-mail\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"emailConfirmation\\\" placeholder=\\\"Confirma e-mail\\\" autocomplete=\\\"off\\\">\\n              </mt-input-container>\\n            </div>\\n          </div>\\n          \\n          \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <p class=\\\"lead\\\">Endereço de Entrega:</p>\\n            </div>\\n            <div class=\\\"col-sm-6 col-xs-12\\\">\\n              <mt-input-container errorMessage=\\\"Campo obrigatório e com 5 caracteres\\\" label=\\\"Endereço\\\">\\n                <input class=\\\"form-control\\\" formControlName=\\\"address\\\" placeholder=\\\"Endereço\\\" minlength=\\\"5\\\" autocomplete=\\\"off\\\">\\n              </mt-input-container>\\n            </div>\\n            <div class=\\\"col-sm-3 col-xs-6\\\">\\n              <mt-input-container errorMessage=\\\"Campo obrigatório e somente números\\\" label=\\\"Numero\\\">\\n                <input class=\\\"form-control\\\" formControlName=\\\"number\\\" placeholder=\\\"Número\\\" pattern=\\\"^[0-9]*$\\\" autocomplete=\\\"off\\\">\\n              </mt-input-container>\\n            </div>\\n            <div class=\\\"col-sm-3 col-xs-6\\\">\\n              <mt-input-container>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"optionalAddress\\\" placeholder=\\\"Complemento\\\" autocomplete=\\\"off\\\">\\n              </mt-input-container>\\n            </div>\\n            <!-- /.col -->\\n          </div>\\n          <!-- /.row -->\\n\\n          <!-- Table row -->\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n              <p class=\\\"lead\\\">Itens do Pedido:</p>\\n            </div>\\n              <mt-order-items [items]=\\\"cartItems()\\\" \\n                (increaseQty)=\\\"increaseQty($event)\\\" \\n                (decreaseQty)=\\\"decreaseQty($event)\\\"\\n                (remove)=\\\"remove($event)\\\"\\n              ></mt-order-items>\\n            <!-- /.col -->\\n          </div>\\n          <!-- /.row -->\\n\\n          <div class=\\\"row\\\">\\n            <!-- accepted payments column -->\\n            <div class=\\\"col-sm-6 col-xs-12\\\">\\n              <p class=\\\"lead\\\">Formas de Pagamento:</p>\\n\\n                <div class=\\\"form-group\\\">     \\n                  <mt-radio [options]=\\\"paymentOptions\\\" formControlName=\\\"paymentOption\\\" ></mt-radio>\\n                </div>\\n\\n            </div>\\n            <!-- /.col -->\\n            <div class=\\\"col-sm-6 col-xs-12\\\">\\n              <p class=\\\"lead\\\">Frete e Total:</p>\\n\\n              <mt-delivery-costs [delivery]=\\\"delivery\\\" [itemsValue]=\\\"itemsValue()\\\"></mt-delivery-costs>\\n            </div>\\n            <!-- /.col -->\\n          </div>\\n\\n        </form>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button (click)=\\\"checkOrder(orderForm.value)\\\" class=\\\"btn btn-success pull-right\\\" [disabled]=\\\"!orderForm.valid\\\"><i class=\\\"fa fa-credit-card\\\"></i> Concluir Pedido\\n            </button>\\n          </div>\\n        </div>\\n\\n    </section>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { RadioOption } from 'app/shared/radio/radio-option.model';\nimport { OrderService } from './order.service';\nimport { CartItem } from 'app/restaurant-detail/shooping-cart/cart-item.model';\nimport { OrderItemsComponent } from './order-items/order-items.component';\nimport { Order, OrderItem } from './order.model';\nimport { Router } from '@angular/router';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validator, Validators } from '@angular/forms';\nimport 'rxjs/add/operator/do'\n\n@Component({\n  selector: 'mt-order',\n  templateUrl: './order.component.html',\n})\nexport class OrderComponent implements OnInit {\n\n  emailPattern = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n\n  numberPattern = /^[0-9]*$/\n\n  orderForm: FormGroup\n\n  delivery: number = 8\n\n  orderId: string\n\n  paymentOptions: RadioOption[] = [\n    {label: 'Dinheiro', value: 'MON'},\n    {label: 'Cartão de Débito', value: 'DEB'},\n    {label: 'Cartão Refeição', value: 'REG'},\n  ]\n\n  constructor(private orderService: OrderService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.orderForm = new FormGroup({\n      name: new FormControl('', {\n        validators: [Validators.required, Validators.minLength(5)],\n      }),\n      email: this.formBuilder.control('', [Validators.required, Validators.pattern(this.emailPattern)]),\n      emailConfirmation: this.formBuilder.control('',[Validators.required, Validators.pattern(this.emailPattern)]),\n      address: this.formBuilder.control('', [Validators.required, Validators.minLength(5)]),\n      number: this.formBuilder.control('', [Validators.required,Validators.pattern(this.numberPattern)]),\n      optionalAddress: this.formBuilder.control(''),\n      paymentOption: this.formBuilder.control('', [Validators.required])\n    },  {validators: [OrderComponent.equalsTo], updateOn: 'blur'})\n  }\n\n  static equalsTo(group: AbstractControl): {[key: string]: boolean}{\n    const email = group.get('email')\n    const emailConfirmation = group.get('emailConfirmation')\n    if(!email || !emailConfirmation){\n      return undefined\n    }\n\n    if(email.value !== emailConfirmation.value){\n      return {emailsNotMatch:true}\n    }\n    return undefined\n  }\n\n  itemsValue(): number {\n    return this.orderService.itemsValue()\n  }\n\n  cartItems(): CartItem[]{\n    return this.orderService.cartItems()\n  }\n\n  increaseQty(item: CartItem){\n    this.orderService.increaseQty(item)\n  }\n  decreaseQty(item: CartItem){\n    this.orderService.decreaseQty(item)\n  }\n  remove(item: CartItem){\n    this.orderService.removeItem(item)\n  }\n\n  isOrderCompleted(): boolean{\n    return this.orderId !== undefined\n  }\n\n  checkOrder(order: Order){\n    order.orderItems = this.cartItems().map((item:CartItem)=> new OrderItem(item.quantity, item.menuItem.id))\n    this.orderService.checkOrder(order)\n    .do((orderId: string) => {\n      this.orderId = orderId\n    })\n    .subscribe((orderId: string) => {\n      this.router.navigate(['/order-summary'])\n      console.log(`Compra concluída: ${orderId}`)\n      this.orderService.clear()\n    })\n    console.log(order)\n  }\n    \n}\n","class Order {\n\n    constructor(\n        public address: string,\n        public number: number,\n        public optionalAddress: string,\n        public paymentOption: string,\n        public orderItems: OrderItem[] = [],\n        public id?: string\n    ){}\n\n}\n\nclass OrderItem {\n\n    constructor(public quantity: number, public menuId: string){}\n\n}\n\nexport {Order, OrderItem}","import { NgModule } from \"@angular/core\";\nimport { OrderComponent } from \"./order.component\";\nimport { OrderItemsComponent } from \"./order-items/order-items.component\";\nimport { DeliveryCostsComponent } from \"./delivery-costs/delivery-costs.component\";\nimport { SharedModule } from \"app/shared/shared.module\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { LeaveOrderGuard } from \"./leave-order.guard\";\n\nconst ROUTES: Routes = [\n    {path: '', component: OrderComponent, canDeactivate: [LeaveOrderGuard]}\n]\n\n@NgModule({\n    declarations:[\n        OrderComponent,\n        OrderItemsComponent,\n        DeliveryCostsComponent\n    ],\n    imports: [\n        SharedModule,\n        RouterModule.forChild(ROUTES)\n    ]\n})\n\n\nexport class OrderModule{}"],"sourceRoot":""}